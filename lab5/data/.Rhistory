dbinom(4,10,0.25)
dbinom(2,4,0.2)
binom.test(2,20,0.25)$p.value
dbinom(1,20,0.25)p.value
dbinom(1,20,0.25)$p.value
binom.test(1,20,0.25)$p.value
pchisq(8,6)
pchisq(8,6)
Fish <- matrix(c(1,0,0,2),2,2)
fisher.test(Fish)$p.value
#### seroprevalence study
library(knitr)
SeroprevalenceTable <- matrix(c(369,2,3280,50),2,2)
rownames(SeroprevalenceTable) <- c("Negative","Positive")
colnames(SeroprevalenceTable) <- c("Manufacturer", "Stanford")
kable(SeroprevalenceTable)
pVal <- fisher.test(SeroprevalenceTable)$p.val
pVal
bone_age <- read.csv("boneDensity.csv")
bone_age <- read.csv("boneDensity.csv")
bone_age <- read.csv("boneDensity.csv")
kable(bone_age)
bone_age <- read.csv("boneDensity.csv")
fittedLM <- lm(y~x, data = bone_age)
abline(fittedLM)
bone_age <- read.csv("boneDensity.csv")
cor <- data.frame(x,y)
bone_age <- read.csv("boneDensity.csv")
x <- bone_age[1]
y <- bone_age[2]
cor <- data.frame(x,y)
plot(cor)
fittedLM <- lm(y~x, data = bone_age)
abline(fittedLM)
x
errors <- NULL # initialize a vector to contain the results
for (i in 1:17){
errors[i] <- oneOut(i, cor) # save the result for each row
}
oneOut <- function(row, dataSet){
testingData <- dataSet[row,]
trainingData <- dataSet[-row,]
trainedLM <- lm(y~x, trainingData)
testingLMprediction <- predict(trainedLM, testingData)
(testingLMprediction - testingData$y)^2
}
errors <- NULL # initialize a vector to contain the results
for (i in 1:17){
errors[i] <- oneOut(i, cor) # save the result for each row
}
mean(errors)
plot(cor)
fittedLM <- lm(y~x, data=cor)
abline(fittedLM, col="blue")
kernelFit <- with(cor, ksmooth(x, y,
kernel = "normal",
bandwidth = 1.5))
lines(kernelFit, col="green")
kernelOneOut <- function(row, dataSet, bw){
testingData <- dataSet[row,]
trainingData <- dataSet[-row,]
kernelPrediction <- with(trainingData,
ksmooth(x, y,
kernel = "normal",
bandwidth = bw,
x.points = testingData$x))
(kernelPrediction$y - testingData$y)^2
}
errors <- NULL
for (i in 1:17){
errors[i] <- kernelOneOut(i, cor, bw=1.5)
}
kernelError <-mean(errors)
kernelError
errors <- NULL # initialize a vector to contain the results
for (i in 1:17){
errors[i] <- oneOut(i, cor) # save the result for each row
}
mean(errors)
kernelOneOut <- function(row, dataSet, bw){
testingData <- dataSet[row,]
trainingData <- dataSet[-row,]
kernelPrediction <- with(trainingData,
ksmooth(x, y,
kernel = "normal",
bandwidth = bw,
x.points = testingData$x))
(kernelPrediction$y - testingData$y)^2
}
errors <- NULL
for (i in 1:17){
errors[i] <- kernelOneOut(i, cor, bw=1.5)
}
kernelError <-mean(errors)
kernelError
kernelOneOut <- function(row, dataSet, bw){
testingData <- dataSet[row,]
trainingData <- dataSet[-row,]
kernelPrediction <- with(trainingData,
ksmooth(x, y,
kernel = "normal",
bandwidth = bw,
x.points = testingData$x))
(kernelPrediction$y - testingData$y)^2
}
errors <- NULL
for (i in 1:17){
errors[i] <- kernelOneOut(i, cor, bw=1.5)
}
kernelError <-mean(errors)
kernelError
plot(cor)
fittedLM <- lm(y~x, data=cor)
abline(fittedLM, col="blue")
kernelFit <- with(cor, ksmooth(x, y,
kernel = "normal",
bandwidth = 2))
lines(kernelFit, col="green")
kernelOneOut <- function(row, dataSet, bw){
testingData <- dataSet[row,]
trainingData <- dataSet[-row,]
kernelPrediction <- with(trainingData,
ksmooth(x, y,
kernel = "normal",
bandwidth = bw,
x.points = testingData$x))
(kernelPrediction$y - testingData$y)^2
}
errors <- NULL
for (i in 1:17){
errors[i] <- kernelOneOut(i, cor, bw=2)
}
kernelError <-mean(errors)
kernelError
install.packages("tidyverse")
library("tidyverse")
(+ 5 - 3) * 2
(+ 8 / 2) ** 2
pi <- 3.14159265359
2 * pi
?mean
mean(x)
?mean
x <- c(2, 8, 6, 6, 7, 4, 9, 9, 9, 10)
mean(x)
median(x)
spring_1 <- c(36.25, 35.40, 35.30)
spring_2 <- c(35.15, 35.35, 33.35)
spring_3 <- c(30.70, 29.65, 29.20)
spring_4 <- c(39.70, 40.05, 38.65)
spring_5 <- c(31.85, 31.40, 29.30)
spring_6 <- c(30.20, 30.65, 29.75)
spring_7 <- c(32.90, 32.50, 32.80)
spring_8 <- c(36.80, 36.45, 33.15)
spring_1 <- c(36.25, 35.40, 35.30)
spring_2 <- c(35.15, 35.35, 33.35)
spring_3 <- c(30.70, 29.65, 29.20)
spring_4 <- c(39.70, 40.05, 38.65)
spring_5 <- c(31.85, 31.40, 29.30)
spring_6 <- c(30.20, 30.65, 29.75)
spring_7 <- c(32.90, 32.50, 32.80)
spring_8 <- c(36.80, 36.45, 33.15)
hot_springs <- c(spring_1, spring_2, spring_3, spring_4, spring_5, spring_6, spring_7)
hot_springs <- c(spring_1, spring_2, spring_3, spring_4, spring_5, spring_6, spring_7)
hot_springs
hot_spring_matrix <- matrix(hot_springs, nrow = 8, byrow = T)
hot_spring_matrix
hot_springs <- c(spring_1, spring_2, spring_3, spring_4, spring_5, spring_6, spring_7, spring_8)
hot_springs
hot_spring_matrix <- matrix(hot_springs, nrow = 8, byrow = T)
hot_spring_matrix
colnames(hot_spring_matrix) <- scientists
scientists <- c("scientistis")
measurement <- c("measurements")
colnames(hot_spring_matrix) <- scientists
colnames(hot_spring_matrix) <- scientists
colnames(hot_spring_matrix) <- scientists
scientists <- c("Jill", "Steve", "Susan")
measurement <- c("measurements")
colnames(hot_spring_matrix) <- scientists
rownames(hot_spring_matrix) <- measurement
scientists <- c("Jill", "Steve", "Susan")
measurement <- c("spring_1", "spring_2", "spring_3", "spring_4", "spring_5", "spring_6", "spring_7", "spring_8")
hot_spring_matrix <- matrix(hot_springs, nrow = 8, byrow = T)
hot_spring_matrix
hot_springs <- c(spring_1, spring_2, spring_3, spring_4, spring_5, spring_6, spring_7, spring_8)
hot_springs
colnames(hot_spring_matrix) <- scientists
rownames(hot_spring_matrix) <- measurement
hot_spring_matrix
mean(hot_springs)
per_springs <- c(rowsum(hot_spring_matrix))
per_springs <- c(rowSums(hot_spring_matrix))
per_springs <- c(rowSums(hot_spring_matrix))
per_springs <- c(rowSums(hot_spring_matrix))
per_springs
per_spring_total <- c(rowSums(hot_spring_matrix))
per_spring_total
per_spring_mean <- rowMeans(hot_spring_matrix)
per_spring_mean
hot_spring_matrix
scientists <- c("Jill", "Steve", "Susan")
measurement <- c("Bluebell Spring", "spring_2", "spring_3", "spring_4", "spring_5", "spring_6", "spring_7", "spring_8")
scientists <- c("Jill", "Steve", "Susan")
measurement <- c("Bluebell Spring", "Opal Spring", "Riverside Spring", "Too Hot Spring", "Mystery Spring", "Emerald Spring", "Black Spring", "Pearl Spring")
colnames(hot_spring_matrix) <- scientists
rownames(hot_spring_matrix) <- measurement
hot_spring_matrix
per_spring_mean <- rowMeans(hot_spring_matrix)
per_spring_mean
addmean_hot_spring_maxtrix <- rbind(hot_spring_matrix, per_spring_mean)
addmean_hot_spring_maxtrix
total_harry_potter_matrix <- rbind(all_harry_potter_matrix, In_total)
addmean_hot_spring_maxtrix <- cbind(hot_spring_matrix, per_spring_mean)
addmean_hot_spring_maxtrix
addmean_hot_spring_maxtrix(2,3)
addmean_hot_spring_maxtrix[2,3]
Jill <- addmean_hot_spring_maxtrix[,1]
Jill <- addmean_hot_spring_maxtrix[,1]
mean(Jill)
Jill <- addmean_hot_spring_maxtrix[,1]
Jill_mean <- mean(Jill)
Jill_mean
Susan_Opal <- addmean_hot_spring_maxtrix[2,3]
Susan_Opal
Susan <- addmean_hot_spring_maxtrix[,3]
Susan_mean <- mean(Susan)
Susan_mean
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidyverse)
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
dim(homerange)
names(homerange)
summary(homerange)
table(homerange)
glimpse(homerange)
homerange$taxon <- as.factor(homerange$taxon)
levels(homerange$taxon)
homerange$order <- as.factor(homerange$order)
levels(homerange$order)
View(homerange)
names(homerange)
new_homerange <- select(homerange, taxon:species)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
homerange <- readr::read_csv("data/Tamburelloetal_HomeRangeDatabase.csv")
carnivores <- filter(homerange, tropic.guild = "carnivores")
carnivores <- filter(homerange, tropic.guild == "carnivores")
carnivores <- filter(homerange, trophic.guild == "carnivores")
carnivores <- filter(homerange, trophic.guild == "carnivores")
herbivores <- filter(homerange, trophic.guild == "herbivores")
View(carnivores)
carnivores <- filter(homerange, trophic.guild == "carnivore")
herbivores <- filter(homerange, trophic.guild == "herbivore")
View(carnivores)
View(carnivores)
mean(carnivores$mean.hra.m2)
varnivores_mean <- mean(carnivores$mean.hra.m2)
varnivores_mean
carnivores_mean <- mean(carnivores$mean.hra.m2)
carnivores_mean
herbivores_mean <- mean(herbivores$mean.hra.m2)
herbivores_mean
herbivores_mean <- mean(herbivores$mean.hra.m2, na.rm = T)
herbivores_mean
carnivores_mean <- mean(carnivores$mean.hra.m2, na.rm = T)
carnivores_mean
deer <- filter(homerange, family == "cervidae")
deer <- filter(homerange, family == "cervidae")
new_deer <- select(deer, "mean mass", "log10 mass", "family", "family", "genus", "spicies")
deer <- filter(homerange, family == "cervidae")
new_deer <- select(deer, "mean.mass.g", "log10 mass", "family", "family", "genus", "spicies")
deer <- filter(homerange, family == "cervidae")
new_deer <- select(deer, "mean.mass.g", "log10.mass", "family", "family", "genus", "spicies")
deer <- filter(homerange, family == "cervidae")
new_deer <- select(deer, "mean.mass.g", "log10.mass", "family", "family", "genus", "species")
deer <- filter(homerange, family == "cervidae")
new_deer <- select(deer, "mean.mass.g", "log10.mass", "family", "family", "genus", "species")
view(new_deer)
View(new_homerange)
View(deer)
snake <- filter(homerange, taxon == "snakes")
snake <- filter(homerange, taxon == "snakes")
view(snake)
table(homerange$taxon)
table(homerange$trophic.guild)
library("tidyverse")
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
superhero_info <- rename(superhero_info, gender = "Gender", eye_color = "Eye color", race = "Race", hair_color = "Hair color", height = "Height", publisher = "Publisher", skin_color = "Skin color", alignment = "Alignment", weight = "Weight")
head(superhero_powers)
library("janitor")
superhero_powers <- janitor::clean_names(superhero_powers)
tabyl(superhero_info, alignment)
neutral <- filter(superhero_info, alignment == "neutral")
select(superhero_info, "name", "alignment", "race")
filter(superhero_info, race != "Human")
good_guys <- filter(superhero_info, alignment == "good")
bad_guys <- filter(superhero_info, alignment == "bad")
neutral <- filter(superhero_info, alignment == "neutral")
neutral
library("tidyverse")
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
superhero_info <- rename(superhero_info, gender = "Gender", eye_color = "Eye color", race = "Race", hair_color = "Hair color", height = "Height", publisher = "Publisher", skin_color = "Skin color", alignment = "Alignment", weight = "Weight")
head(superhero_powers)
library("janitor")
superhero_powers <- janitor::clean_names(superhero_powers)
tabyl(superhero_info, alignment)
neutral <- filter(superhero_info, alignment == "neutral")
neutral
select(superhero_info, "name", "alignment", "race")
filter(superhero_info, race != "Human")
good_guys <- filter(superhero_info, alignment == "good")
good_guys
bad_guys <- filter(superhero_info, alignment == "bad")
bad_guys
tabyl(good_guys, race)
filter(good_guys, race == "Asgardian")
bad_guys %>%
filter(gender == "Male") %>%
filter(height >= "200") %>%
#arrange(height)
bad_guys %>%
filter(gender == "Male") %>%
filter(height >= "200") %>%
arrange(height)
library("tidyverse")
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
superhero_info <- rename(superhero_info, gender = "Gender", eye_color = "Eye color", race = "Race", hair_color = "Hair color", height = "Height", publisher = "Publisher", skin_color = "Skin color", alignment = "Alignment", weight = "Weight")
head(superhero_powers)
library("janitor")
superhero_powers <- janitor::clean_names(superhero_powers)
tabyl(superhero_info, alignment)
neutral <- filter(superhero_info, alignment == "neutral")
neutral
select(superhero_info, "name", "alignment", "race")
filter(superhero_info, race != "Human")
good_guys <- filter(superhero_info, alignment == "good")
good_guys
bad_guys <- filter(superhero_info, alignment == "bad")
bad_guys
tabyl(good_guys, race)
filter(good_guys, race == "Asgardian")
bad_guys %>%
filter(gender == "Male") %>%
filter(height >= "200") %>%
arrange(height)
superhero_info %>%
filter(alignment == "good" | alignment == "bad") %>%
filter(hair_color == "No Hair")
superhero_info %>%
filter(height > "200") %>%
filter(weight >= "450")
superhero_info %>%
mutate(height_weight_ratio = height/weight) %>%
arrange(desc(height_weight_ratio))
glimpse(superhero_powers)
superhero_info %>%
filter(height > "200" | weight >= "450")
superhero_info %>%
filter(alignment == "good" | alignment == "bad") %>%
filter(hair_color == "No Hair")
filter(good_guys, hair_color == "No Hair")
bold_bad_guys <- filter(good_guys, hair_color == "No Hair")
bold_good_guys <- filter(good_guys, hair_color == "No Hair")
bold_bad_guys <- filter(bad_guys, hair_color == "No Hair")
bold_good_guys <- filter(good_guys, hair_color == "No Hair")
bold_bad_guys <- filter(bad_guys, hair_color == "No Hair")
table(bold_bad_guys)
table(bold_good_guys)
bold_good_guys <- filter(good_guys, hair_color == "No Hair")
bold_bad_guys <- filter(bad_guys, hair_color == "No Hair")
table(bold_bad_guys)
table(bold_good_guys)
View(superhero_powers)
superhero_powers %>%
accelerated_healing == "TRUE"
superhero_powers %>%
filter(accelerated_healing == "TRUE")
superhero_powers %>%
filter(accelerated_healing == "TRUE") %>%
filter(durability == "TRUE") %>%
filter(super_strength == "TRUE")
superhero_powers %>%
filter(accelerated_healing == "TRUE") %>%
filter(durability == "TRUE") %>%
filter(super_strength == "TRUE") %>%
nrow()
superhero_info %>%
filter(height > 300)
superhero_info %>%
filter(weight > 450)
nrow(filter(bad_guys$hair_color == "No Hair"))
nrow(filter(bad_guys, hair_color == "No Hair"))
nrow(filter(good_guys, hair_color == "No Hair"))
superhero_info %>%
filter(height > 300)
superhero_info %>%
filter(weight > 450)
superhero_info %>%
filter(height > "300" | weight >= "450")
select(superhero_powers, contains("iron"))
select(superhero_powers$hero_names, contains("iron"))
superhero_info %>%
filter(height > "300" | weight >= "450")
superhero_info %>%
filter(height > 300 | weight >= 450)
filter(superhero_powers$hero_names, contains("iron"))
filter(superhero_powers, hero_names, contains("iron"))
superhero_info %>%
filter(hero_names, contains("iron"))
superhero_info %>%
filter(hero_names, contains("Iron"))
superhero_info %>%
filter(hero_names == "Iron Man")
View(superhero_info)
superhero_info %>%
filter(name, contains("Iron"))
superhero_powers %>%
filter(hero_names == "Iron Man")
library("tidyverse")
superhero_info <- readr::read_csv("data/heroes_information.csv", na = c("", "-99", "-"))
superhero_info <- readr::read_csv("../lab5/data/heroes_information.csv", na = c("", "-99", "-"))
setwd(/Users/manxiangling/Desktop/BIS15W2023_TonyTao/lab5)
setwd(Users/manxiangling/Desktop/BIS15W2023_TonyTao/lab5)
setwd("/Users/manxiangling/Desktop/BIS15W2023_TonyTao/lab5/data")
setwd(Users/manxiangling/Desktop/BIS15W2023_TonyTao/lab5)
setwd(Users/manxiangling/Desktop/BIS15W2023_TonyTao/lab5)
#setwd(Users/manxiangling/Desktop/BIS15W2023_TonyTao/lab5)
superhero_info <- readr::read_csv("../lab5/data/heroes_information.csv", na = c("", "-99", "-"))
setwd(/Users/manxiangling/Desktop/BIS15W2023_TonyTao/lab5/data)
setwd(/Users/manxiangling/Desktop/BIS15W2023_TonyTao/lab5/data/)
setwd(/Users/manxiangling/Desktop/BIS15W2023_TonyTao/lab5/data/)
#setwd(/Users/manxiangling/Desktop/BIS15W2023_TonyTao/lab5/data/)
superhero_info <- readr::read_csv("../lab5/data/heroes_information.csv", na = c("", "-99", "-"))
setwd("~/Desktop/BIS15W2023_TonyTao/lab5/HW #5")
setwd("/Users/manxiangling/Desktop/BIS15W2023_TonyTao/lab5/data")
setwd("/Users/manxiangling/Desktop/BIS15W2023_TonyTao/lab5/data")
superhero_info <- readr::read_csv("../lab5/data/heroes_information.csv", na = c("", "-99", "-"))
setwd("/Users/manxiangling/Desktop/BIS15W2023_TonyTao/lab5/data")
superhero_info <- readr::read_csv("heroes_information.csv", na = c("", "-99", "-"))
readr::read
setwd("/Users/manxiangling/Desktop/BIS15W2023_TonyTao/lab5/data")
superhero_info <- readr::read_csv("heroes_information.csv", na = c("", "-99", "-"))
library("tidyverse")
setwd("/Users/manxiangling/Desktop/BIS15W2023_TonyTao/lab5/data")
superhero_info <- readr::read_csv("heroes_information.csv", na = c("", "-99", "-"))
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
library("tidyverse")
setwd("/Users/manxiangling/Desktop/BIS15W2023_TonyTao/lab5/data")
superhero_info <- readr::read_csv("heroes_information.csv", na = c("", "-99", "-"))
setwd("/Users/manxiangling/Desktop/BIS15W2023_TonyTao/lab5/data")
superhero_powers <- readr::read_csv("data/super_hero_powers.csv", na = c("", "-99", "-"))
library("tidyverse")
setwd("/Users/manxiangling/Desktop/BIS15W2023_TonyTao/lab5/data")
superhero_info <- readr::read_csv("heroes_information.csv", na = c("", "-99", "-"))
setwd("/Users/manxiangling/Desktop/BIS15W2023_TonyTao/lab5/data")
superhero_powers <- readr::read_csv("super_hero_powers.csv", na = c("", "-99", "-"))
superhero_info <- rename(superhero_info, gender = "Gender", eye_color = "Eye color", race = "Race", hair_color = "Hair color", height = "Height", publisher = "Publisher", skin_color = "Skin color", alignment = "Alignment", weight = "Weight")
head(superhero_powers)
library("janitor")
superhero_powers <- janitor::clean_names(superhero_powers)
tabyl(superhero_info, alignment)
neutral <- filter(superhero_info, alignment == "neutral")
neutral
select(superhero_info, "name", "alignment", "race")
filter(superhero_info, race != "Human")
good_guys <- filter(superhero_info, alignment == "good")
good_guys
bad_guys <- filter(superhero_info, alignment == "bad")
bad_guys
tabyl(good_guys, race)
filter(good_guys, race == "Asgardian")
bad_guys %>%
filter(gender == "Male") %>%
filter(height >= "200") %>%
arrange(height)
nrow(filter(bad_guys, hair_color == "No Hair"))
nrow(filter(good_guys, hair_color == "No Hair"))
superhero_info %>%
filter(height > 300 | weight >= 450)
superhero_info %>%
filter(height > 300)
superhero_info %>%
filter(weight > 450)
superhero_info %>%
mutate(height_weight_ratio = height/weight) %>%
arrange(desc(height_weight_ratio))
glimpse(superhero_powers)
superhero_powers %>%
filter(accelerated_healing == "TRUE") %>%
filter(durability == "TRUE") %>%
filter(super_strength == "TRUE") %>%
nrow()
superhero_powers %>%
filter(hero_names == "Iron Man") #How do I pull out every column that is TRUE.
#Contain function for row.
superhero_info %>%
mutate(height_weight_ratio = height/weight) %>%
#arrange(desc(height_weight_ratio))
superhero_info %>%
mutate(height_weight_ratio = height/weight) %>%
superhero_info %>%
mutate(height_weight_ratio = height/weight) #%>%
#arrange(desc(height_weight_ratio))
superhero_info %>%
mutate(height_weight_ratio = height/weight) %>%
arrange(height_weight_ratio)
#arrange(desc(height_weight_ratio))
